---
  extends: "asset.vwf"
  methods: 
    _kd: 
      body: |
            if(this.keysDown.indexOf(e.key.key) == -1)    {        this.keysDown.push(e.key.key);       }
      parameters: 
        - "e"
        - "d"
    _ku: 
      body: |
            if (this.keysDown.indexOf(e.key.key) != -1)
            {
                this.keysDown.splice(this.keysDown.indexOf(e.key.key), 1);
                if(e.key.key == 'Q')
                {
                    var current = this.cycleNames.indexOf(this.currentCycleName);
                    current ++; 
                    if(current > this.cycleNames.length-1)
                    current = 0;
                    if(!current)
                    current = 0;
                    this.setCycle(this.cycleNames[current]);
                }
            }
      parameters: 
        - "e"
        - "d"
    clampToGround: 
      body: |
            var thispos = this.transformAPI.getPosition();
            thispos[2] += 1;
            var t = this.Scene.traceAPI.rayCast(thispos, [0, 0, -1],
            {
                ignore: [findviewnode(this.id)]
            });
            thispos[2] -= 1;
            if (t)
            {
                thispos[2] = (thispos[2] - t.distance) + 1;;
                console.log(t.distance);
                this.transformAPI.setPosition(thispos);
            }
      parameters: []
    ready: 
      body: |
            
            this.Scene.unbind("keyDown",this.__kd);
            this.Scene.unbind("keyUp",this.__ku);
            
            var self = this;
            this.__ku = function(e,d)
            {
                self._ku(e,d);
            }
            
            this.__kd = function(e,d)
            {
                self._kd(e,d);
            }
            
            this.Scene.bind("keyDown",this.__kd);
            this.Scene.bind("keyUp",this.__ku);
            // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects
      parameters: []
    setCycle: 
      body: |
            this.currentCycleMax = this[cycleName + "Max"];
            this.currentCycleMin = this[cycleName + "Min"];
            this.currentCycleFrame = 0;
            this.currentCycleName = cycleName;
            this.animationFrame = this.currentCycleFrame;
            console.log(cycleName);
      parameters: 
        - "cycleName"
    tick: 
      body: |
            var topKey = this.keysDown[this.keysDown.length - 1];
            if (topKey)
            {
                this.currentCycleFrame += 1;
                if (this.currentCycleFrame > this.currentCycleMax)
                {
                    this.currentCycleFrame = this.currentCycleMin;
                }
                this.animationFrame = this.currentCycleFrame;
                var thispos = this.transformAPI.getPosition();
                if (topKey == 'W')
                {
                    this.transformAPI.lookat(Vec3.add([1, 0, 0], thispos, []), null, 'X', 'Z', null);
                    this.transformAPI.move(0, -0.1, 0, this.transformAPI.COORDINATES.LOCAL);
                }
                if (topKey == 'S')
                {
                    this.transformAPI.lookat(Vec3.add([-1, 0, 0], thispos, []), null, 'X', 'Z', null);
                    this.transformAPI.move(0, -0.1, 0, this.transformAPI.COORDINATES.LOCAL);
                }
                if (topKey == 'A')
                {
                    this.transformAPI.lookat(Vec3.add([0, 1, 0], thispos, []), null, 'X', 'Z', null);
                    this.transformAPI.move(0, -0.1, 0, this.transformAPI.COORDINATES.LOCAL);
                }
                if (topKey == 'D')
                {
                    this.transformAPI.lookat(Vec3.add([0, -1, 0], thispos, []), null, 'X', 'Z', null);
                    this.transformAPI.move(0, -0.1, 0, this.transformAPI.COORDINATES.LOCAL);
                }
                this.clampToGround();
            }
      parameters: []
  properties: 
    DisplayName: "/SAVE/models/characters/soldier12.dae1"
    ___physics_activation_state: 1
    ___physics_deactivation_time: 0
    ___physics_velocity_angular: 
      - 0
      - 0
      - 0
    ___physics_velocity_linear: 
      - 0
      - 0
      - 0
    animationFrame: 0
    currentCycleFrame: 0
    currentCycleMax: 50
    currentCycleMin: 0
    currentCycleName: "walk"
    cycleNames: 
      - "stand"
      - "walk"
      - "run"
      - "lowCrawl"
      - "highCrawl"
    highCrawlMax: 0
    highCrawlMin: 0
    keysDown: []
    lowCrawlMax: 0
    lowCrawlMin: 0
    owner: "Rob"
    runMax: 0
    runMin: 0
    standMax: 0
    standMin: 0
    transform: 
      - 1
      - 0
      - 0
      - 0
      - 0
      - 1
      - 0
      - 0
      - 0
      - 0
      - 1
      - 0
      - 2
      - 0
      - 5.75
      - 1
    walkMax: 50
    walkMin: 0
  random: 
    c: 1
    s0: 0.977080909535289
    s1: 0.50445185881108
    s2: 0.661440004827455
  sequence: 0
  source: "/SAVE/models/characters/soldier12.dae"
  type: "subDriver/threejs/asset/vnd.collada+xml"
